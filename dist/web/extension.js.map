{"version":3,"sources":["webpack://vscode-todo-highlight/./node_modules/os-browserify/main.js","webpack://vscode-todo-highlight/./src/util.js","webpack://vscode-todo-highlight/external \"vscode\"","webpack://vscode-todo-highlight/webpack/bootstrap","webpack://vscode-todo-highlight/./src/extension.js"],"names":["module","exports","vscode","os","window","workspace","defaultIcon","zapIcon","DEFAULT_KEYWORDS","text","color","backgroundColor","overviewRulerColor","DEFAULT_STYLE","getPathes","config","Array","isArray","join","searchAnnotationInFile","file","annotations","annotationList","regexp","fileInUri","uri","toString","pathWithoutFile","substring","length","line","lineCount","lineText","lineAt","match","hasOwnProperty","content","getContent","trim","locationInfo","getLocationInfo","annotation","label","detail","relativePath","lineNum","fileName","absPath","startCol","endCol","push","showOutputChannel","data","outputChannel","clear","toggleURI","getConfiguration","get","forEach","v","i","a","patterns","patternType","platform","appendLine","show","showInformationMessage","indexOf","rootPath","outputFile","replace","errorHandler","err","processing","setStatusMsg","console","log","icon","msg","tooltip","statusBarItem","getAssembledData","keywords","customDefaultStyle","isCaseSensitive","result","toUpperCase","Object","assign","keys","chooseAnnotationType","availableAnnotationTypes","showQuickPick","searchAnnotations","workspaceState","pattern","callback","settings","includePattern","excludePattern","limitationForSearch","statusMsg","findFiles","then","files","totalFiles","progress","times","openTextDocument","file_iterated","message","Math","floor","manullyCancel","update","annotationsFound","resultNum","createStatusBarItem","StatusBarAlignment","Left","command","escapeRegExp","s","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","util","activate","context","assembledData","decorationTypes","styleForRegExp","keywordsPattern","timeout","activeEditor","activeTextEditor","updateDecorations","document","getText","mathes","exec","startPos","positionAt","index","endPos","decoration","range","Range","matchedValue","createTextEditorDecorationType","rangeOption","decorationType","setDecorations","init","createOutputChannel","overviewRulerLane","OverviewRulerLane","Right","mergedStyle","map","RegExp","triggerUpdateDecorations","clearTimeout","setTimeout","subscriptions","commands","registerCommand","unshift","annotationType","searchPattern","onDidChangeActiveTextEditor","editor","onDidChangeTextDocument","event","onDidChangeConfiguration"],"mappings":"2BAAAA,EAAOC,QAAU,EAAjB,M,cCAA,IAAIC,EAAS,EAAQ,KACjBC,EAAK,EAAQ,KACbC,EAASF,EAAOE,OAChBC,EAAYH,EAAOG,UAEnBC,EAAc,eACdC,EAAU,SAGVC,EAAmB,CACnB,QAAS,CACLC,KAAM,QACNC,MAAO,OACPC,gBAAiB,UACjBC,mBAAoB,wBAExB,SAAU,CACNH,KAAM,SACNC,MAAO,OACPC,gBAAiB,UACjBC,mBAAoB,yBAIxBC,EAAgB,CAChBH,MAAO,UACPC,gBAAiB,WAkCrB,SAASG,EAAUC,GACf,OAAOC,MAAMC,QAAQF,GACjB,IAAMA,EAAOG,KAAK,KAAO,IACL,iBAAVH,EAAqBA,EAAS,GA2DhD,SAASI,EAAuBC,EAAMC,EAAaC,EAAgBC,GAI/D,IAHA,IAAIC,EAAYJ,EAAKK,IAAIC,WACrBC,EAAkBH,EAAUI,UAAU,EAAGJ,EAAUK,QAE9CC,EAAO,EAAGA,EAAOV,EAAKW,UAAWD,IAAQ,CAC9C,IAAIE,EAAWZ,EAAKa,OAAOH,GAAMrB,KAC7ByB,EAAQF,EAASE,MAAMX,GAC3B,GAAc,OAAVW,EAAgB,CACXb,EAAYc,eAAeR,KAC5BN,EAAYM,GAAmB,IAEnC,IAAIS,EAAUC,EAAWL,EAAUE,GAC/BE,EAAQP,OAAS,MACjBO,EAAUA,EAAQR,UAAU,EAAG,KAAKU,OAAS,OAEjD,IAAIC,EAAeC,EAAgBhB,EAAWG,EAAiBK,EAAUF,EAAMI,GAE3EO,EAAa,CACbhB,IAAKc,EAAad,IAClBiB,MAAON,EACPO,OAAQJ,EAAaK,aACrBC,QAASf,EACTgB,SAAUP,EAAaQ,QACvBC,SAAUT,EAAaS,SACvBC,OAAQV,EAAaU,QAEzB3B,EAAe4B,KAAKT,GACpBpB,EAAYM,GAAiBuB,KAAKT,KAkB9C,SAASU,EAAkBC,GACvB,GAAKhD,EAAOiD,cAGZ,GAFAjD,EAAOiD,cAAcC,QAED,IAAhBF,EAAKvB,OAAT,CAKA,IACI0B,EADWlD,EAAUmD,iBAAiB,iBACjBC,IAAI,aAAa,GAE1CL,EAAKM,SAAQ,SAAUC,EAAGC,EAAGC,GAEzB,IAEIC,EAAW,CAFA,KAAOF,EAAI,GAAK,KAAOD,EAAElC,IAAM,KAAOkC,EAAEd,QAAU,GAClD,KAAOe,EAAI,GAAK,KAAOD,EAAElC,IAAM,KAAOkC,EAAEd,QAAU,GAAK,KAAOc,EAAEX,SAAW,IAItFe,EAAc,EACd5D,EAAG6D,UAA8B,UAAlB7D,EAAG6D,aAElBD,EAAc,GAGdR,IAEAQ,IAAgBA,GAEpB3D,EAAOiD,cAAcY,WAAWH,EAASC,IACzC3D,EAAOiD,cAAcY,WAAW,KAAON,EAAEjB,MAAQ,SAErDtC,EAAOiD,cAAca,YA3BjB9D,EAAO+D,uBAAuB,cA8BtC,SAAS9B,EAAWL,EAAUE,GAC1B,OAAOF,EAASJ,UAAUI,EAASoC,QAAQlC,EAAM,IAAKF,EAASH,QAGnE,SAASW,EAAgBhB,EAAWG,EAAiBK,EAAUF,EAAMI,GACjE,IAAImC,EAAWhE,EAAUgE,SAAW,IAChCC,EAAa3C,EAAgB4C,QAAQF,EAAU,IAC/CrB,EAAWhB,EAASoC,QAAQlC,EAAM,IAItC,MAAO,CACHT,IAAKD,EACLuB,QAASpB,EACTiB,aALW0B,EAAa,KAAOxC,EAAO,GAAK,KAAOkB,EAAW,GAM7DA,SAAUA,EACVC,OARSjB,EAASH,QAoB1B,SAAS2C,EAAaC,GAClBrE,EAAOsE,YAAa,EACpBC,EAAarE,EAjOA,KAkObsE,QAAQC,IAAI,qBAAsBJ,GAGtC,SAASE,EAAaG,EAAMC,EAAKC,GACzB5E,EAAO6E,gBACP7E,EAAO6E,cAAcxE,KAAO,GAAGqE,KAAQC,KAAS,GAC5CC,IACA5E,EAAO6E,cAAcD,QAAUA,GAEnC5E,EAAO6E,cAAcf,QAQ7BlE,EAAOC,QAAU,CACbY,gBACAqE,iBA/NJ,SAA0BC,EAAUC,EAAoBC,GACpD,IAAIC,EAAS,GAsBb,OArBAH,EAASzB,SAASC,IAEd,IAAIlD,GADJkD,EAAgB,iBAALA,EAAgB,CAAElD,KAAMkD,GAAMA,GAC5BlD,KACRA,IAEA4E,IACD5E,EAAOA,EAAK8E,eAGJ,SAAR9E,GAA2B,UAARA,IACnBkD,EAAI6B,OAAOC,OAAO,GAAIjF,EAAiBC,GAAOkD,IAElD2B,EAAO7E,GAAQ+E,OAAOC,OAAO,GAAI5E,EAAeuE,EAAoBzB,OAGxE6B,OAAOE,KAAKlF,GAAkBkD,SAASC,IAC9B2B,EAAO3B,KACR2B,EAAO3B,GAAK6B,OAAOC,OAAO,GAAI5E,EAAeuE,EAAoB5E,EAAiBmD,QAInF2B,GAyMPK,qBAtMJ,SAA8BC,GAC1B,OAAOxF,EAAOyF,cAAcD,EAA0B,KAsMtDE,kBA5LJ,SAA2BC,EAAgBC,EAASC,GAEhD,IAAIC,EAAW7F,EAAUmD,iBAAiB,iBACtC2C,EAAiBrF,EAAUoF,EAASzC,IAAI,aAAe,SACvD2C,EAAiBtF,EAAUoF,EAASzC,IAAI,YACxC4C,EAAsBH,EAASzC,IAAI,oBAAqB,MAExD6C,EAAY,gBAEhBlG,EAAOsE,YAAa,EAEpBC,EAAapE,EAAS+F,GAEtBjG,EAAUkG,UAAUJ,EAAgBC,EAAgBC,GAAqBG,MAAK,SAAUC,GAEpF,GAAKA,GAA0B,IAAjBA,EAAM5E,OAwBpB,IAnBA,IAAI6E,EAAaD,EAAM5E,OACnB8E,EAAW,EACXC,EAAQ,EACRvF,EAAc,GACdC,EAAiB,GAeZsC,EAAI,EAAGA,EAAI8C,EAAY9C,IAE5BvD,EAAUwG,iBAAiBJ,EAAM7C,IAAI4C,MAAK,SAAUpF,GAChDD,EAAuBC,EAAMC,EAAaC,EAAgB0E,GAC1Dc,OACD,SAAUrC,GACTD,EAAaC,GACbqC,YA9BJb,EAAS,CAAEc,QAAS,mBAUxB,SAASD,IACLF,IACAD,EAAWK,KAAKC,MAAML,EAAQF,EAAa,KAE3C/B,EAAapE,EAASoG,EAAW,KAAOL,IAEpCM,IAAUF,GAActG,EAAO8G,iBAC/B9G,EAAOsE,YAAa,EACpBqB,EAAeoB,OAAO,iBAAkB7F,GACxC2E,EAAS,KAAM5E,EAAaC,QAgBrC,SAAUmD,GACTD,EAAaC,OAyIjB2C,iBArGJ,SAA0B3C,EAAKpD,EAAaC,GACxC,GAAImD,EAGA,OAFAG,QAAQC,IAAI,qBAAsBJ,QAClCE,EAAarE,EAtJJ,KA0Jb,IAAI+G,EAAY/F,EAAeO,OAE/B8C,EAAarE,EAAa+G,EADZA,EAAY,oBAE1BlE,EAAkB7B,IA4FlBgG,oBAlCJ,WACI,IAAIrC,EAAgB7E,EAAOkH,oBAAoBpH,EAAOqH,mBAAmBC,MAIzE,OAHAvC,EAAcxE,KAAOH,gBACrB2E,EAAcD,QAAU,mBACxBC,EAAcwC,QAAU,kCACjBxC,GA8BPN,eACAxB,oBACAuE,aAbJ,SAAsBC,GAClB,OAAOA,EAAEpD,QAAQ,yBAA0B,W,qBCvP/CvE,EAAOC,QAAU2H,QAAQ,YCCrBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAa/H,QAGrB,IAAID,EAAS6H,EAAyBE,GAAY,CAGjD9H,QAAS,IAOV,OAHAiI,EAAoBH,GAAU/H,EAAQA,EAAOC,QAAS6H,GAG/C9H,EAAOC,Q,uBCfXC,EAAS,EAAQ,KACjBiI,EAAO,EAAQ,KACf/H,EAASF,EAAOE,OAChBC,EAAYH,EAAOG,UAuKvBJ,EAAQmI,SArKR,SAAkBC,GAEd,IAEIhD,EAAiBiD,EAAeC,EAAiBvC,EAASwC,EAAgBC,EAF1EC,EAAU,KACVC,EAAevI,EAAOwI,iBAEtB7C,EAAiBsC,EAAQtC,eAEzBG,EAAW7F,EAAUmD,iBAAiB,iBA6D1C,SAASqF,IAEL,GAAKF,GAAiBA,EAAaG,SAAnC,CAMA,IAFA,IACiB5G,EADbzB,EAAOkI,EAAaG,SAASC,UAC7BC,EAAS,GACN9G,EAAQ8D,EAAQiD,KAAKxI,IAAO,CAC/B,IAAIyI,EAAWP,EAAaG,SAASK,WAAWjH,EAAMkH,OAClDC,EAASV,EAAaG,SAASK,WAAWjH,EAAMkH,MAAQlH,EAAM,GAAGL,QACjEyH,EAAa,CACbC,MAAO,IAAIrJ,EAAOsJ,MAAMN,EAAUG,IAGlCI,EAAevH,EAAM,GACpBmD,IACDoE,EAAeA,EAAalE,eAG5ByD,EAAOS,GACPT,EAAOS,GAAcvG,KAAKoG,GAE1BN,EAAOS,GAAgB,CAACH,GAGxBb,EAAgBnG,SAAWiG,EAAgBkB,KAC3ClB,EAAgBkB,GAAgBrJ,EAAOsJ,+BAA+BlB,IAI9EhD,OAAOE,KAAK6C,GAAiB7E,SAASC,IAC7B0B,IACD1B,EAAIA,EAAE4B,eAEV,IAAIoE,EAAczD,EAASzC,IAAI,aAAeuF,EAAOrF,GAAKqF,EAAOrF,GAAK,GAClEiG,EAAiBrB,EAAgB5E,GACrCgF,EAAakB,eAAeD,EAAgBD,OAIpD,SAASG,EAAK5D,GACV,IAAId,EAAqBc,EAASzC,IAAI,gBACtCgF,EAAkBvC,EAASzC,IAAI,mBAC/B4B,EAAkBa,EAASzC,IAAI,mBAAmB,GAE7CrD,EAAO6E,gBACR7E,EAAO6E,cAAgBkD,EAAKb,uBAE3BlH,EAAOiD,gBACRjD,EAAOiD,cAAgBjD,EAAO2J,oBAAoB,kBAGtDxB,EAAkB,GAEdE,EAAgBnG,QAChBkG,EAAiBhD,OAAOC,OAAO,GAAI0C,EAAKtH,cAAeuE,EAAoB,CACvE4E,kBAAmB9J,EAAO+J,kBAAkBC,QAEhDlE,EAAUyC,IAEVH,EAAgBH,EAAKjD,iBAAiBgB,EAASzC,IAAI,YAAa2B,EAAoBC,GACpFG,OAAOE,KAAK4C,GAAe5E,SAASC,IAC3B0B,IACD1B,EAAIA,EAAE4B,eAGV,IAAI4E,EAAc3E,OAAOC,OAAO,GAAI,CAChCuE,kBAAmB9J,EAAO+J,kBAAkBC,OAC7C5B,EAAc3E,IAEZwG,EAAYvJ,qBAEbuJ,EAAYvJ,mBAAqBuJ,EAAYxJ,iBAGjD4H,EAAgB5E,GAAKvD,EAAOsJ,+BAA+BS,MAG/DnE,EAAUR,OAAOE,KAAK4C,GAAe8B,KAAKzG,GAC/BwE,EAAKT,aAAa/D,KAC1BzC,KAAK,MAGZ8E,EAAU,IAAIqE,OAAOrE,EAAS,MAC1BX,IACAW,EAAU,IAAIqE,OAAOrE,EAAS,MAKtC,SAASsE,IACL5B,GAAW6B,aAAa7B,GACxBA,EAAU8B,WAAW3B,EAAmB,GAxJ5CiB,EAAK5D,GAELmC,EAAQoC,cAAcvH,KAAKhD,EAAOwK,SAASC,gBAAgB,iCAAiC,WACxFzE,EAASiB,OAAO,YAAajB,EAASzC,IAAI,aAAa,GAAM+C,MAAK,WAC9D8D,WAIRjC,EAAQoC,cAAcvH,KAAKhD,EAAOwK,SAASC,gBAAgB,iCAAiC,WACxF,GAAIlC,EAAgBnG,OAChB6F,EAAKrC,kBAAkBC,EAAgBC,EAASmC,EAAKf,sBAClD,CACH,IAAKkB,EAAe,OACpB,IAAI1C,EAA2BJ,OAAOE,KAAK4C,GAC3C1C,EAAyBgF,QAAQ,OACjCzC,EAAKxC,qBAAqBC,GAA0BY,MAAK,SAAUqE,GAC/D,GAAKA,EAAL,CACA,IAAIC,EAAgB9E,EACE,OAAlB6E,IACAA,EAAiB1C,EAAKT,aAAamD,GACnCC,EAAgB,IAAIT,OAAOQ,EAAgBxF,EAAkB,IAAM,OAEvE8C,EAAKrC,kBAAkBC,EAAgB+E,EAAe3C,EAAKf,2BAKvEiB,EAAQoC,cAAcvH,KAAKhD,EAAOwK,SAASC,gBAAgB,mCAAmC,WAC1F,IAAIrJ,EAAiByE,EAAetC,IAAI,iBAAkB,IAC1D0E,EAAKhF,kBAAkB7B,OAGvBqH,GACA2B,IAGJlK,EAAO2K,6BAA4B,SAAUC,GACzCrC,EAAeqC,EACXA,GACAV,MAEL,KAAMjC,EAAQoC,eAEjBpK,EAAU4K,yBAAwB,SAAUC,GACpCvC,GAAgBuC,EAAMpC,WAAaH,EAAaG,UAChDwB,MAEL,KAAMjC,EAAQoC,eAEjBpK,EAAU8K,0BAAyB,YAC/BjF,EAAW7F,EAAUmD,iBAAiB,kBAGxBC,IAAI,cAElBqG,EAAK5D,GACLoE,OACD,KAAMjC,EAAQoC,iB","file":"extension.js","sourcesContent":["module.exports = require('os');\n","var vscode = require('vscode');\nvar os = require(\"os\");\nvar window = vscode.window;\nvar workspace = vscode.workspace;\n\nvar defaultIcon = '$(checklist)';\nvar zapIcon = '$(zap)';\nvar defaultMsg = '0';\n\nvar DEFAULT_KEYWORDS = {\n    \"TODO:\": {\n        text: \"TODO:\",\n        color: '#fff',\n        backgroundColor: '#ffbd2a',\n        overviewRulerColor: 'rgba(255,189,42,0.8)'\n    },\n    \"FIXME:\": {\n        text: \"FIXME:\",\n        color: '#fff',\n        backgroundColor: '#f06292',\n        overviewRulerColor: 'rgba(240,98,146,0.8)'\n    }\n};\n\nvar DEFAULT_STYLE = {\n    color: \"#2196f3\",\n    backgroundColor: \"#ffeb3b\",\n};\n\nfunction getAssembledData(keywords, customDefaultStyle, isCaseSensitive) {\n    var result = {}\n    keywords.forEach((v) => {\n        v = typeof v == 'string' ? { text: v } : v;\n        var text = v.text;\n        if (!text) return;//NOTE: in case of the text is empty\n\n        if (!isCaseSensitive) {\n            text = text.toUpperCase();\n        }\n\n        if (text == 'TODO:' || text == 'FIXME:') {\n            v = Object.assign({}, DEFAULT_KEYWORDS[text], v);\n        }\n        result[text] = Object.assign({}, DEFAULT_STYLE, customDefaultStyle, v);\n    })\n\n    Object.keys(DEFAULT_KEYWORDS).forEach((v) => {\n        if (!result[v]) {\n            result[v] = Object.assign({}, DEFAULT_STYLE, customDefaultStyle, DEFAULT_KEYWORDS[v]);\n        }\n    });\n\n    return result;\n}\n\nfunction chooseAnnotationType(availableAnnotationTypes) {\n    return window.showQuickPick(availableAnnotationTypes, {});\n}\n\n//get the include/exclude config\nfunction getPathes(config) {\n    return Array.isArray(config) ?\n        '{' + config.join(',') + '}'\n        : (typeof config == 'string' ? config : '');\n}\n\nfunction searchAnnotations(workspaceState, pattern, callback) {\n\n    var settings = workspace.getConfiguration('todohighlight');\n    var includePattern = getPathes(settings.get('include')) || '{**/*}';\n    var excludePattern = getPathes(settings.get('exclude'));\n    var limitationForSearch = settings.get('maxFilesForSearch', 5120);\n\n    var statusMsg = ` Searching...`;\n\n    window.processing = true;\n\n    setStatusMsg(zapIcon, statusMsg);\n\n    workspace.findFiles(includePattern, excludePattern, limitationForSearch).then(function (files) {\n\n        if (!files || files.length === 0) {\n            callback({ message: 'No files found' });\n            return;\n        }\n\n        var totalFiles = files.length,\n            progress = 0,\n            times = 0,\n            annotations = {},\n            annotationList = [];\n\n        function file_iterated() {\n            times++;\n            progress = Math.floor(times / totalFiles * 100);\n\n            setStatusMsg(zapIcon, progress + '% ' + statusMsg);\n\n            if (times === totalFiles || window.manullyCancel) {\n                window.processing = true;\n                workspaceState.update('annotationList', annotationList);\n                callback(null, annotations, annotationList);\n            }\n        }\n\n        for (var i = 0; i < totalFiles; i++) {\n\n            workspace.openTextDocument(files[i]).then(function (file) {\n                searchAnnotationInFile(file, annotations, annotationList, pattern);\n                file_iterated();\n            }, function (err) {\n                errorHandler(err);\n                file_iterated();\n            });\n\n        }\n        \n    }, function (err) {\n        errorHandler(err);\n    });\n}\n\nfunction searchAnnotationInFile(file, annotations, annotationList, regexp) {\n    var fileInUri = file.uri.toString();\n    var pathWithoutFile = fileInUri.substring(7, fileInUri.length);\n\n    for (var line = 0; line < file.lineCount; line++) {\n        var lineText = file.lineAt(line).text;\n        var match = lineText.match(regexp);\n        if (match !== null) {\n            if (!annotations.hasOwnProperty(pathWithoutFile)) {\n                annotations[pathWithoutFile] = [];\n            }\n            var content = getContent(lineText, match);\n            if (content.length > 500) {\n                content = content.substring(0, 500).trim() + '...';\n            }\n            var locationInfo = getLocationInfo(fileInUri, pathWithoutFile, lineText, line, match);\n\n            var annotation = {\n                uri: locationInfo.uri,\n                label: content,\n                detail: locationInfo.relativePath,\n                lineNum: line,\n                fileName: locationInfo.absPath,\n                startCol: locationInfo.startCol,\n                endCol: locationInfo.endCol\n            };\n            annotationList.push(annotation);\n            annotations[pathWithoutFile].push(annotation);\n        }\n    }\n}\n\nfunction annotationsFound(err, annotations, annotationList) {\n    if (err) {\n        console.log('todohighlight err:', err);\n        setStatusMsg(defaultIcon, defaultMsg);\n        return;\n    }\n\n    var resultNum = annotationList.length;\n    var tooltip = resultNum + ' result(s) found';\n    setStatusMsg(defaultIcon, resultNum, tooltip);\n    showOutputChannel(annotationList);\n}\n\nfunction showOutputChannel(data) {\n    if (!window.outputChannel) return;\n    window.outputChannel.clear();\n\n    if (data.length === 0) {\n        window.showInformationMessage('No results');\n        return;\n    }\n\n    var settings = workspace.getConfiguration('todohighlight');\n    var toggleURI = settings.get('toggleURI', false);\n\n    data.forEach(function (v, i, a) {\n        // due to an issue of vscode(https://github.com/Microsoft/vscode/issues/586), in order to make file path clickable within the output channel,the file path differs from platform\n        var patternA = '#' + (i + 1) + '\\t' + v.uri + '#' + (v.lineNum + 1);\n        var patternB = '#' + (i + 1) + '\\t' + v.uri + ':' + (v.lineNum + 1) + ':' + (v.startCol + 1);\n        var patterns = [patternA, patternB];\n\n        //for windows and mac\n        var patternType = 0;\n        if (os.platform && os.platform() === \"linux\") {\n            // for linux\n            patternType = 1;\n        }\n\n        if (toggleURI) {\n            //toggle the pattern\n            patternType = +!patternType;\n        }\n        window.outputChannel.appendLine(patterns[patternType]);\n        window.outputChannel.appendLine('\\t' + v.label + '\\n');\n    });\n    window.outputChannel.show();\n}\n\nfunction getContent(lineText, match) {\n    return lineText.substring(lineText.indexOf(match[0]), lineText.length);\n};\n\nfunction getLocationInfo(fileInUri, pathWithoutFile, lineText, line, match) {\n    var rootPath = workspace.rootPath + '/';\n    var outputFile = pathWithoutFile.replace(rootPath, '');\n    var startCol = lineText.indexOf(match[0]);\n    var endCol = lineText.length;\n    var location = outputFile + ' ' + (line + 1) + ':' + (startCol + 1);\n\n    return {\n        uri: fileInUri,\n        absPath: pathWithoutFile,\n        relativePath: location,\n        startCol: startCol,\n        endCol: endCol\n    };\n};\n\nfunction createStatusBarItem() {\n    var statusBarItem = window.createStatusBarItem(vscode.StatusBarAlignment.Left);\n    statusBarItem.text = defaultIcon + defaultMsg;\n    statusBarItem.tooltip = 'List annotations';\n    statusBarItem.command = 'todohighlight.showOutputChannel';\n    return statusBarItem;\n};\n\nfunction errorHandler(err) {\n    window.processing = true;\n    setStatusMsg(defaultIcon, defaultMsg);\n    console.log('todohighlight err:', err);\n}\n\nfunction setStatusMsg(icon, msg, tooltip) {\n    if (window.statusBarItem) {\n        window.statusBarItem.text = `${icon} ${msg}` || '';\n        if (tooltip) {\n            window.statusBarItem.tooltip = tooltip;\n        }\n        window.statusBarItem.show();\n    }\n}\n\nfunction escapeRegExp(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nmodule.exports = {\n    DEFAULT_STYLE,\n    getAssembledData,\n    chooseAnnotationType,\n    searchAnnotations,\n    annotationsFound,\n    createStatusBarItem,\n    setStatusMsg,\n    showOutputChannel,\n    escapeRegExp\n};\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * vscode plugin for highlighting TODOs and FIXMEs within your code\n *\n * NOTE: each decoration type has a unique key, the highlight and clear highight functionality are based on it\n */\n\nvar vscode = require('vscode');\nvar util = require('./util');\nvar window = vscode.window;\nvar workspace = vscode.workspace;\n\nfunction activate(context) {\n\n    var timeout = null;\n    var activeEditor = window.activeTextEditor;\n    var isCaseSensitive, assembledData, decorationTypes, pattern, styleForRegExp, keywordsPattern;\n    var workspaceState = context.workspaceState;\n\n    var settings = workspace.getConfiguration('todohighlight');\n\n    init(settings);\n\n    context.subscriptions.push(vscode.commands.registerCommand('todohighlight.toggleHighlight', function () {\n        settings.update('isEnable', !settings.get('isEnable'), true).then(function () {\n            triggerUpdateDecorations();\n        });\n    }))\n\n    context.subscriptions.push(vscode.commands.registerCommand('todohighlight.listAnnotations', function () {\n        if (keywordsPattern.trim()) {\n            util.searchAnnotations(workspaceState, pattern, util.annotationsFound);\n        } else {\n            if (!assembledData) return;\n            var availableAnnotationTypes = Object.keys(assembledData);\n            availableAnnotationTypes.unshift('ALL');\n            util.chooseAnnotationType(availableAnnotationTypes).then(function (annotationType) {\n                if (!annotationType) return;\n                var searchPattern = pattern;\n                if (annotationType != 'ALL') {\n                    annotationType = util.escapeRegExp(annotationType);\n                    searchPattern = new RegExp(annotationType, isCaseSensitive ? 'g' : 'gi');\n                }\n                util.searchAnnotations(workspaceState, searchPattern, util.annotationsFound);\n            });\n        }\n    }));\n\n    context.subscriptions.push(vscode.commands.registerCommand('todohighlight.showOutputChannel', function () {\n        var annotationList = workspaceState.get('annotationList', []);\n        util.showOutputChannel(annotationList);\n    }));\n\n    if (activeEditor) {\n        triggerUpdateDecorations();\n    }\n\n    window.onDidChangeActiveTextEditor(function (editor) {\n        activeEditor = editor;\n        if (editor) {\n            triggerUpdateDecorations();\n        }\n    }, null, context.subscriptions);\n\n    workspace.onDidChangeTextDocument(function (event) {\n        if (activeEditor && event.document === activeEditor.document) {\n            triggerUpdateDecorations();\n        }\n    }, null, context.subscriptions);\n\n    workspace.onDidChangeConfiguration(function () {\n        settings = workspace.getConfiguration('todohighlight');\n\n        //NOTE: if disabled, do not re-initialize the data or we will not be able to clear the style immediatly via 'toggle highlight' command\n        if (!settings.get('isEnable')) return;\n\n        init(settings);\n        triggerUpdateDecorations();\n    }, null, context.subscriptions);\n\n    function updateDecorations() {\n\n        if (!activeEditor || !activeEditor.document) {\n            return;\n        }\n\n        var text = activeEditor.document.getText();\n        var mathes = {}, match;\n        while (match = pattern.exec(text)) {\n            var startPos = activeEditor.document.positionAt(match.index);\n            var endPos = activeEditor.document.positionAt(match.index + match[0].length);\n            var decoration = {\n                range: new vscode.Range(startPos, endPos)\n            };\n\n            var matchedValue = match[0];\n            if (!isCaseSensitive) {\n                matchedValue = matchedValue.toUpperCase();\n            }\n\n            if (mathes[matchedValue]) {\n                mathes[matchedValue].push(decoration);\n            } else {\n                mathes[matchedValue] = [decoration];\n            }\n\n            if (keywordsPattern.trim() && !decorationTypes[matchedValue]) {\n                decorationTypes[matchedValue] = window.createTextEditorDecorationType(styleForRegExp);\n            }\n        }\n\n        Object.keys(decorationTypes).forEach((v) => {\n            if (!isCaseSensitive) {\n                v = v.toUpperCase();\n            }\n            var rangeOption = settings.get('isEnable') && mathes[v] ? mathes[v] : [];\n            var decorationType = decorationTypes[v];\n            activeEditor.setDecorations(decorationType, rangeOption);\n        })\n    }\n\n    function init(settings) {\n        var customDefaultStyle = settings.get('defaultStyle');\n        keywordsPattern = settings.get('keywordsPattern');\n        isCaseSensitive = settings.get('isCaseSensitive', true);\n\n        if (!window.statusBarItem) {\n            window.statusBarItem = util.createStatusBarItem();\n        }\n        if (!window.outputChannel) {\n            window.outputChannel = window.createOutputChannel('TodoHighlight');\n        }\n\n        decorationTypes = {};\n\n        if (keywordsPattern.trim()) {\n            styleForRegExp = Object.assign({}, util.DEFAULT_STYLE, customDefaultStyle, {\n                overviewRulerLane: vscode.OverviewRulerLane.Right\n            });\n            pattern = keywordsPattern;\n        } else {\n            assembledData = util.getAssembledData(settings.get('keywords'), customDefaultStyle, isCaseSensitive);\n            Object.keys(assembledData).forEach((v) => {\n                if (!isCaseSensitive) {\n                    v = v.toUpperCase()\n                }\n\n                var mergedStyle = Object.assign({}, {\n                    overviewRulerLane: vscode.OverviewRulerLane.Right\n                }, assembledData[v]);\n\n                if (!mergedStyle.overviewRulerColor) {\n                    // use backgroundColor as the default overviewRulerColor if not specified by the user setting\n                    mergedStyle.overviewRulerColor = mergedStyle.backgroundColor;\n                }\n\n                decorationTypes[v] = window.createTextEditorDecorationType(mergedStyle);\n            });\n\n            pattern = Object.keys(assembledData).map((v) => {\n                return util.escapeRegExp(v);\n            }).join('|');\n        }\n\n        pattern = new RegExp(pattern, 'gi');\n        if (isCaseSensitive) {\n            pattern = new RegExp(pattern, 'g');\n        }\n\n    }\n\n    function triggerUpdateDecorations() {\n        timeout && clearTimeout(timeout);\n        timeout = setTimeout(updateDecorations, 0);\n    }\n}\n\nexports.activate = activate;\n"],"sourceRoot":""}